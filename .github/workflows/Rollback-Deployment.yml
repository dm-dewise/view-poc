name: Rollback Deployment

on:  
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:  
  restore-postgres-db:
    runs-on: ubuntu-latest
    steps:   
      # Checkout the repository
      - uses: actions/checkout@v2

      # Run postgre service
      - name: Run service
        run: |
          sudo systemctl start postgresql.service
          
      - name: Delete  schema of DB destination
        run: psql -d "postgres://postgres:Gr33nT34!234@localhost:5433/viewall-test" -c "DROP SCHEMA IF EXISTS public CASCADE;"
        
      - name: Recreate schema of DB destination
        run: psql -d "postgres://postgres:Gr33nT34!234@localhost:5433/viewall-test" -c "CREATE SCHEMA IF NOT EXISTS public;"
    
      # Run pg-restore
      - name: Postgres Backup Restore   
        run: psql -d pg_restore "postgres://postgres:Gr33nT34!234@localhost:5433/viewall-test" "backups/dump-viewall-202403051322.sql"     
        # uses: tj-actions/pg-restore@v6
        # with:          
        #   database_url: "postgres://postgres:Gr33nT34!234@localhost:5433/viewall-test"
        #   backup_file: "backups/dump-viewall-202403051322.sql"
        #   options: "-f"
        #   postgresql_version: "16"

  switch-revisions:
    runs-on: ubuntu-latest
    steps:
      - name: Sign into Azure
        uses: azure/login@v1
        with:          
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # - name: Deploy to containerapp
      #   uses: azure/CLI@v1
      #   with:
      #     inlineScript: |
      #       az config set extension.use_dynamic_install=yes_without_prompt
      #       az containerapp registry set -n ${{ secrets.CONTAINER_APP_NAME }} -g ${{ secrets.RESOURCEGROUP_NAME }} --server ${{ secrets.ACR_LOGIN_SERVER }} --username ${{ secrets.REGISTRY_USERNAME }} --password ${{ secrets.REGISTRY_PASSWORD }}
      #       az containerapp update -n ${{ secrets.CONTAINER_APP_NAME }} -g ${{ secrets.RESOURCEGROUP_NAME }} --image ${{ secrets.ACR_LOGIN_SERVER }}/${{ secrets.CONTAINER_APP_NAME }}:${{ github.sha }}
